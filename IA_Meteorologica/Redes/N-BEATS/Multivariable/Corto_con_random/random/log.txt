(venv) PS C:\Users\adrian\Desktop\TFM\TFG-FR\IA_Meteorologica\Redes\N-BEATS\Multivariable\Corto_con_random\random> python .\main.py
Denormalización: mean=0.02, std=0.96
Dataset: data/weatherHistory_normalize.csv
Tiempo: Formatted Date | Objetivo: Temperature (C)_normalized
Features (21): ['h_sin', 'h_cos', 'dow_sin', 'dow_cos', 'doy_sin', 'doy_cos', 'Precip Type_normalized', 'Temperature (C)_normalized', 'Apparent Temperature (C)_normalized', 'Humidity_normalized', 'Wind Speed (km/h)_normalized', 'wind_bearing_sin', 'wind_bearing_cos', 'Visibility (km)_normalized', 'Pressure (millibars)_normalized', 'trend_normalized', 'Summary_Clear', 'Summary_Foggy', 'Summary_Mostly Cloudy', 'Summary_Overcast', 'Summary_Partly Cloudy']
Total puntos: 96453 — Train: 67517, Val: 14468, Test: 14468
Ventana H=336, L=24 → input_size=7056
Ventanas => Train: 67158, Val: 14445, Test: 14445
[INFO] device=cuda | gpu=NVIDIA GeForce RTX 3050 | amp=True | tf32=True | compile=False
[INFO] dataloader: workers=6 pin_memory=True prefetch=4 persistent=True
Iniciando HP search: random ...
Mejores HP → width=128, depth=2, blocks=4, lr=0.001, wd=1e-06, val=0.071488
Epoch 001 | train_loss=0.070681 | val_loss=0.076862 | val_MAE=0.2179 | val_RMSE=0.2772
Epoch 002 | train_loss=0.031077 | val_loss=0.074859 | val_MAE=0.2126 | val_RMSE=0.2736
Epoch 003 | train_loss=0.020593 | val_loss=0.079317 | val_MAE=0.2174 | val_RMSE=0.2816
Epoch 004 | train_loss=0.016662 | val_loss=0.076043 | val_MAE=0.2137 | val_RMSE=0.2758
Epoch 005 | train_loss=0.014537 | val_loss=0.074542 | val_MAE=0.2109 | val_RMSE=0.2730
Epoch 006 | train_loss=0.013870 | val_loss=0.074886 | val_MAE=0.2124 | val_RMSE=0.2737
Epoch 007 | train_loss=0.013052 | val_loss=0.078528 | val_MAE=0.2167 | val_RMSE=0.2802
Epoch 008 | train_loss=0.012853 | val_loss=0.076984 | val_MAE=0.2147 | val_RMSE=0.2775
Epoch 009 | train_loss=0.011916 | val_loss=0.077312 | val_MAE=0.2154 | val_RMSE=0.2781
Epoch 010 | train_loss=0.012232 | val_loss=0.076772 | val_MAE=0.2153 | val_RMSE=0.2771
Epoch 011 | train_loss=0.008329 | val_loss=0.074909 | val_MAE=0.2124 | val_RMSE=0.2737
Epoch 012 | train_loss=0.007333 | val_loss=0.076024 | val_MAE=0.2150 | val_RMSE=0.2757
Epoch 013 | train_loss=0.007257 | val_loss=0.076289 | val_MAE=0.2147 | val_RMSE=0.2762
Epoch 014 | train_loss=0.007608 | val_loss=0.075462 | val_MAE=0.2138 | val_RMSE=0.2747
Epoch 015 | train_loss=0.007726 | val_loss=0.075493 | val_MAE=0.2133 | val_RMSE=0.2748
Epoch 016 | train_loss=0.006181 | val_loss=0.076894 | val_MAE=0.2154 | val_RMSE=0.2773
Epoch 017 | train_loss=0.005793 | val_loss=0.075857 | val_MAE=0.2139 | val_RMSE=0.2754
Early stopping (patience=12).
C:\Users\adrian\Desktop\TFM\TFG-FR\IA_Meteorologica\Redes\N-BEATS\Multivariable\Corto_con_random\random\train_nbeats.py:488: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(best_path, map_location=device)
Cargado mejor checkpoint: checkpoints\nbeats_MULTI_H336_L24_Temperature_(C)_normalized_D21.pth
Test: loss=0.088093 | MAE=0.2297 | RMSE=0.2968
Guardado TorchScript en: checkpoints\nbeats_MULTI_H336_L24_Temperature_(C)_normalized_D21_torchscript.pt
>>> Dispositivo usado: cuda
PDF guardado en: outputs\analysis_MULTI_H336_L24_Temperature_(C)_normalized_D21.pdf
Listo. Resultados en: outputs