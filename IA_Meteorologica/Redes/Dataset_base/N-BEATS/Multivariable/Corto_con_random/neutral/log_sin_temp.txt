(venv) PS C:\Users\adrian\Desktop\TFM\TFG-FR\IA_Meteorologica\Redes\N-BEATS\Multivariable\Corto_con_random\neutral> python .\main.py
Denormalización: mean=0.02, std=0.96
Dataset: data/weatherHistory_normalize.csv
Tiempo: Formatted Date | Objetivo: Temperature (C)_normalized
Features (19): ['h_sin', 'h_cos', 'dow_sin', 'dow_cos', 'doy_sin', 'doy_cos', 'Precip Type_normalized', 'Humidity_normalized', 'Wind Speed (km/h)_normalized', 'wind_bearing_sin', 'wind_bearing_cos', 'Visibility (km)_normalized', 'Pressure (millibars)_normalized', 'trend_normalized', 'Summary_Clear', 'Summary_Foggy', 'Summary_Mostly Cloudy', 'Summary_Overcast', 'Summary_Partly Cloudy']
Total puntos: 96453 — Train: 67517, Val: 14468, Test: 14468
Ventana H=336, L=24 → input_size=6384
Ventanas => Train: 67158, Val: 14445, Test: 14445
[INFO] device=cuda | gpu=NVIDIA GeForce RTX 3050 | amp=True | tf32=True | compile=False
[INFO] dataloader: workers=6 pin_memory=True prefetch=4 persistent=True
Epoch 001 | train_loss=0.072601 | val_loss=0.113257 | val_MAE=0.2659 | val_RMSE=0.3365
Epoch 002 | train_loss=0.023856 | val_loss=0.112010 | val_MAE=0.2631 | val_RMSE=0.3347
Epoch 003 | train_loss=0.015427 | val_loss=0.106327 | val_MAE=0.2565 | val_RMSE=0.3261
Epoch 004 | train_loss=0.013974 | val_loss=0.102775 | val_MAE=0.2518 | val_RMSE=0.3206
Epoch 005 | train_loss=0.013473 | val_loss=0.105379 | val_MAE=0.2544 | val_RMSE=0.3246
Epoch 006 | train_loss=0.012053 | val_loss=0.097722 | val_MAE=0.2459 | val_RMSE=0.3126
Epoch 007 | train_loss=0.012414 | val_loss=0.104931 | val_MAE=0.2547 | val_RMSE=0.3239
Epoch 008 | train_loss=0.012599 | val_loss=0.105713 | val_MAE=0.2556 | val_RMSE=0.3251
Epoch 009 | train_loss=0.012218 | val_loss=0.102197 | val_MAE=0.2513 | val_RMSE=0.3197
Epoch 010 | train_loss=0.011675 | val_loss=0.101996 | val_MAE=0.2509 | val_RMSE=0.3194
Epoch 011 | train_loss=0.012158 | val_loss=0.104553 | val_MAE=0.2552 | val_RMSE=0.3233
Epoch 012 | train_loss=0.007149 | val_loss=0.100789 | val_MAE=0.2504 | val_RMSE=0.3175
Epoch 013 | train_loss=0.005852 | val_loss=0.099758 | val_MAE=0.2491 | val_RMSE=0.3158
Epoch 014 | train_loss=0.005830 | val_loss=0.099987 | val_MAE=0.2493 | val_RMSE=0.3162
Epoch 015 | train_loss=0.006282 | val_loss=0.100802 | val_MAE=0.2498 | val_RMSE=0.3175
Epoch 016 | train_loss=0.006789 | val_loss=0.101246 | val_MAE=0.2510 | val_RMSE=0.3182
Epoch 017 | train_loss=0.004945 | val_loss=0.098900 | val_MAE=0.2475 | val_RMSE=0.3145
Epoch 018 | train_loss=0.004378 | val_loss=0.100305 | val_MAE=0.2493 | val_RMSE=0.3167
Early stopping (patience=12).
C:\Users\adrian\Desktop\TFM\TFG-FR\IA_Meteorologica\Redes\N-BEATS\Multivariable\Corto_con_random\neutral\train_nbeats.py:488: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(best_path, map_location=device)
Cargado mejor checkpoint: checkpoints\nbeats_MULTI_H336_L24_Temperature_(C)_normalized_D19.pth
Test: loss=0.156246 | MAE=0.3185 | RMSE=0.3953
Guardado TorchScript en: checkpoints\nbeats_MULTI_H336_L24_Temperature_(C)_normalized_D19_torchscript.pt
>>> Dispositivo usado: cuda
PDF guardado en: outputs\analysis_MULTI_H336_L24_Temperature_(C)_normalized_D19.pdf
Listo. Resultados en: outputs(venv) PS C:\Users\adrian\Desktop\TFM\TFG-FR\IA_Meteorologica\Redes\N-BEATS\Multivariable\Corto_con_random\neutral> python .\main.py
Denormalización: mean=0.02, std=0.96
Dataset: data/weatherHistory_normalize.csv
Tiempo: Formatted Date | Objetivo: Temperature (C)_normalized
Features (19): ['h_sin', 'h_cos', 'dow_sin', 'dow_cos', 'doy_sin', 'doy_cos', 'Precip Type_normalized', 'Humidity_normalized', 'Wind Speed (km/h)_normalized', 'wind_bearing_sin', 'wind_bearing_cos', 'Visibility (km)_normalized', 'Pressure (millibars)_normalized', 'trend_normalized', 'Summary_Clear', 'Summary_Foggy', 'Summary_Mostly Cloudy', 'Summary_Overcast', 'Summary_Partly Cloudy']
Total puntos: 96453 — Train: 67517, Val: 14468, Test: 14468
Ventana H=336, L=24 → input_size=6384
Ventanas => Train: 67158, Val: 14445, Test: 14445
[INFO] device=cuda | gpu=NVIDIA GeForce RTX 3050 | amp=True | tf32=True | compile=False
[INFO] dataloader: workers=6 pin_memory=True prefetch=4 persistent=True
Epoch 001 | train_loss=0.072601 | val_loss=0.113257 | val_MAE=0.2659 | val_RMSE=0.3365
Epoch 002 | train_loss=0.023856 | val_loss=0.112010 | val_MAE=0.2631 | val_RMSE=0.3347
Epoch 003 | train_loss=0.015427 | val_loss=0.106327 | val_MAE=0.2565 | val_RMSE=0.3261
Epoch 004 | train_loss=0.013974 | val_loss=0.102775 | val_MAE=0.2518 | val_RMSE=0.3206
Epoch 005 | train_loss=0.013473 | val_loss=0.105379 | val_MAE=0.2544 | val_RMSE=0.3246
Epoch 006 | train_loss=0.012053 | val_loss=0.097722 | val_MAE=0.2459 | val_RMSE=0.3126
Epoch 007 | train_loss=0.012414 | val_loss=0.104931 | val_MAE=0.2547 | val_RMSE=0.3239
Epoch 008 | train_loss=0.012599 | val_loss=0.105713 | val_MAE=0.2556 | val_RMSE=0.3251
Epoch 009 | train_loss=0.012218 | val_loss=0.102197 | val_MAE=0.2513 | val_RMSE=0.3197
Epoch 010 | train_loss=0.011675 | val_loss=0.101996 | val_MAE=0.2509 | val_RMSE=0.3194
Epoch 011 | train_loss=0.012158 | val_loss=0.104553 | val_MAE=0.2552 | val_RMSE=0.3233
Epoch 012 | train_loss=0.007149 | val_loss=0.100789 | val_MAE=0.2504 | val_RMSE=0.3175
Epoch 013 | train_loss=0.005852 | val_loss=0.099758 | val_MAE=0.2491 | val_RMSE=0.3158
Epoch 014 | train_loss=0.005830 | val_loss=0.099987 | val_MAE=0.2493 | val_RMSE=0.3162
Epoch 015 | train_loss=0.006282 | val_loss=0.100802 | val_MAE=0.2498 | val_RMSE=0.3175
Epoch 016 | train_loss=0.006789 | val_loss=0.101246 | val_MAE=0.2510 | val_RMSE=0.3182
Epoch 017 | train_loss=0.004945 | val_loss=0.098900 | val_MAE=0.2475 | val_RMSE=0.3145
Epoch 018 | train_loss=0.004378 | val_loss=0.100305 | val_MAE=0.2493 | val_RMSE=0.3167
Early stopping (patience=12).
C:\Users\adrian\Desktop\TFM\TFG-FR\IA_Meteorologica\Redes\N-BEATS\Multivariable\Corto_con_random\neutral\train_nbeats.py:488: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ckpt = torch.load(best_path, map_location=device)
Cargado mejor checkpoint: checkpoints\nbeats_MULTI_H336_L24_Temperature_(C)_normalized_D19.pth
Test: loss=0.156246 | MAE=0.3185 | RMSE=0.3953
Guardado TorchScript en: checkpoints\nbeats_MULTI_H336_L24_Temperature_(C)_normalized_D19_torchscript.pt
>>> Dispositivo usado: cuda
PDF guardado en: outputs\analysis_MULTI_H336_L24_Temperature_(C)_normalized_D19.pdf
Listo. Resultados en: outputs